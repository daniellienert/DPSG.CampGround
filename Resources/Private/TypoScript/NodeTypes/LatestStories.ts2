prototype(DPSG.CampGround:LatestStories) {

	templatePath = ${'resource://DPSG.CampGround/Private/Templates/NodeTypes/LatestStories.html'}
	sectionName = 'storyBlocks'

	entries = TYPO3.TypoScript:Collection {
		collection = ${Search.query(site).nodeType('DPSG.CampGround:Story').exactMatch('_storyHeaderImage', 'set').sortDesc('storyStartDate').limit(3).execute()}

		itemName = 'node'
		itemRenderer = DPSG.CampGround:LatestStory {
			templatePath = 'resource://DPSG.CampGround/Private/Templates/NodeTypes/LatestStories.html'
			sectionName = 'singleStory'
		}
	}

	@cache {
		mode = 'cached'
		entryIdentifier.documentNode = ${documentNode}
		// Flush the blog feed when a blog entry is changed
		entryTags.1 = 'NodeType_DPSG.CampGround:Story'
	}
}


prototype(DPSG.CampGround:LatestStory) < prototype(TYPO3.TypoScript:Template) {
	# Fall back to modified date if there is no publication date set


	group = ${q(node).property('group')}

	node = ${node}

	content = TYPO3.Neos:ContentCollection {
		nodePath = 'main'
		@cache.mode = 'cached'
	}

	storyDate = ${q(node).property('storyStartDate') ? q(node).property('storyStartDate') : q(node).property('lastModified')}
	teaserText = ${String.cropAtWord(q(node).find('main').children().find('[instanceof TYPO3.Neos.NodeTypes:Text]').first().property('text'), 200, ' ...')}
}

prototype(TYPO3.Neos:PrimaryContent).Story {
	condition = ${q(node).is('[instanceof DPSG.CampGround:Story]')}
	type = 'DPSG.CampGround:Story'
}